from __future__ import annotations

from typing import Any, Callable

class Dataset:
    @classmethod
    def from_dict(cls, v: dict) -> Dataset: ...
    @classmethod
    def from_list(cls, v: list) -> Dataset: ...
    @property
    def column_names(self) -> None | list[str]: ...
    @property
    def info(self) -> Any: ...
    def __iter__(self): ...
    def __getitem__(self, index: str | int) -> Any: ...
    def __len__(self): ...

class IterableDataset:
    @classmethod
    def from_generator(
        cls, v: Callable, features: None | Any = None
    ) -> IterableDataset: ...
    @property
    def column_names(self) -> None | list[str]: ...
    @property
    def info(self) -> Any: ...
    def __iter__(self): ...
    def __getitem__(self, index: int | str) -> Any: ...
